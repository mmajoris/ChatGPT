import { $ as $argv, c as require, a as $ } from './shared/cli.8f57657e.mjs';
import path from 'path';
import { fileURLToPath } from 'url';
import release from './release.mjs';
import updater from './updater.mjs';
import override from './override.mjs';
import create from './create.mjs';
import download from './download.mjs';
import 'module';
import 'child_process';
import 'fs';
import './updatelog.mjs';
import 'node-fetch';
import '@actions/github';
import 'lodash';
import './template.mjs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
function init() {
  const argv = $argv();
  const subcmd = argv._[0];
  if (argv.h || argv.help) {
    cliHelp();
    return;
  }
  try {
    switch (subcmd) {
      case "release":
        release();
        break;
      case "updater":
        updater();
        break;
      case "override":
        override();
        break;
      case "new":
        create();
        break;
      case "download":
        download();
        break;
      default:
        cliHelp();
    }
  } catch (e) {
    console.error(e);
  }
}
init();
function cliHelp() {
  const pkgJson = require(path.join(__dirname, "..", "package.json"));
  console.log(`${$.green("tauir-release (tr)")}:
${$.gray("https://github.com/lencx/tauri-release")}
${$.gray(`v${pkgJson.version}`)} tauri release toolchain

usage: tr [subcommand] [options]

options:
  ${$.green("new")}                      generate file, support custom path
   ${$.gray("log [--logfile]         UPDATE_LOG.md (default)")}
   ${$.gray("action [--actionfile]   .github/workflows/release.yml (default)")}
  ${$.green("release")}                  tauri release
  ${$.green("download")}                 edit version number
  ${$.green("updater")}                  generate tauri update file
  ${$.green("-h, --help")}               print node command line options
`);
}

export { __dirname };
