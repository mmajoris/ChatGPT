'use strict';

const fs = require('fs');
const path = require('path');
const utils = require('./shared/cli.de4d4f3c.cjs');
require('module');

function updatelog(tag) {
  const reTag = /## v[\d\.]+/;
  const argv = utils.$argv();
  let filePath = utils.UPDATE_LOG_PATH;
  if (argv.logfile) {
    const logPath = path.join(utils.ROOT_PATH, argv.logfile);
    filePath = logPath;
  }
  if (!fs.existsSync(filePath) && !fs.existsSync(utils.UPDATE_LOG_PATH)) {
    console.log(utils.$.red("[\u{1F4A2} updater]"), `Could not found ${utils.$.yellow("UPDATE_LOG.md")}`);
    process.exit(0);
  }
  let _tag;
  const tagMap = {};
  const content = fs.readFileSync(filePath, "utf8").split("\n");
  content.forEach((line, index) => {
    if (reTag.test(line)) {
      _tag = line.slice(3).trim();
      if (!tagMap[_tag]) {
        tagMap[_tag] = [];
        return;
      }
    }
    if (_tag) {
      tagMap[_tag].push(line.trim());
    }
    if (reTag.test(content[index + 1])) {
      _tag = null;
    }
  });
  if (!tagMap?.[tag]) {
    console.log(
      utils.$.red("[\u{1F4A2} updater]"),
      utils.$.yellow(utils.relativePath(filePath)),
      `Tag ${tag} does not exist.`
    );
    process.exit(0);
  }
  return {
    filename: utils.relativePath(filePath),
    content: tagMap[tag].join("\n").trim() || ""
  };
}

module.exports = updatelog;
