import { execSync } from 'child_process';
import fs from 'fs';
import { $ as $argv, t as tauriConfJSON, T as TAURI_CONF_PATH, a as $, r as relativePath } from './shared/cli.8f57657e.mjs';
import updatelog from './updatelog.mjs';
import 'path';
import 'module';

async function release() {
  const argv = $argv();
  const tauriConfJson = tauriConfJSON();
  const version = tauriConfJson?.package?.version || "0.0.0";
  let [a, b, c] = version.split(".")?.map(Number);
  if (argv.major) {
    a += 1;
    b = 0;
    c = 0;
  } else if (argv.minor) {
    b += 1;
    c = 0;
  } else {
    c += 1;
  }
  const nextVersion = `${a}.${b}.${c}`;
  const oldVersion = version;
  tauriConfJson.package.version = nextVersion;
  const nextTag = `v${nextVersion}`;
  const { filename } = updatelog(nextTag);
  fs.writeFileSync(TAURI_CONF_PATH, JSON.stringify(tauriConfJson, null, 2));
  const verChange = `(${$.yellow(oldVersion)} -> ${$.green(nextVersion)})`;
  if (argv.git) {
    execSync(`git add ${relativePath(TAURI_CONF_PATH)} ${filename}`);
    execSync(`git commit -m "v${nextVersion}"`);
    execSync(`git tag -a v${nextVersion} -m "v${nextVersion}"`);
    execSync(`git push`);
    execSync(`git push origin v${nextVersion}`);
    console.log($.green("[\u2728 release]"), `Published successfully ${verChange}`);
  } else {
    console.log($.green("[\u2728 release]"), `tauri.conf.json version ${verChange}`);
  }
}

export { release as default };
