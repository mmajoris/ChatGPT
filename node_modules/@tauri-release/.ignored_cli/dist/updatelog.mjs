import fs from 'fs';
import path from 'path';
import { $ as $argv, R as ROOT_PATH, U as UPDATE_LOG_PATH, a as $, r as relativePath } from './shared/cli.8f57657e.mjs';
import 'module';

function updatelog(tag) {
  const reTag = /## v[\d\.]+/;
  const argv = $argv();
  let filePath = UPDATE_LOG_PATH;
  if (argv.logfile) {
    const logPath = path.join(ROOT_PATH, argv.logfile);
    filePath = logPath;
  }
  if (!fs.existsSync(filePath) && !fs.existsSync(UPDATE_LOG_PATH)) {
    console.log($.red("[\u{1F4A2} updater]"), `Could not found ${$.yellow("UPDATE_LOG.md")}`);
    process.exit(0);
  }
  let _tag;
  const tagMap = {};
  const content = fs.readFileSync(filePath, "utf8").split("\n");
  content.forEach((line, index) => {
    if (reTag.test(line)) {
      _tag = line.slice(3).trim();
      if (!tagMap[_tag]) {
        tagMap[_tag] = [];
        return;
      }
    }
    if (_tag) {
      tagMap[_tag].push(line.trim());
    }
    if (reTag.test(content[index + 1])) {
      _tag = null;
    }
  });
  if (!tagMap?.[tag]) {
    console.log(
      $.red("[\u{1F4A2} updater]"),
      $.yellow(relativePath(filePath)),
      `Tag ${tag} does not exist.`
    );
    process.exit(0);
  }
  return {
    filename: relativePath(filePath),
    content: tagMap[tag].join("\n").trim() || ""
  };
}

export { updatelog as default };
