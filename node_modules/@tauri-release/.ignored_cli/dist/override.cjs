'use strict';

const fs = require('fs');
const path = require('path');
const utils = require('./shared/cli.de4d4f3c.cjs');
const _ = require('lodash');
require('module');

async function override() {
  const argv = utils.$argv();
  let filePath = utils.TAURI_CONF_PATH;
  if (argv.jsonfile) {
    filePath = path.join(utils.ROOT_PATH, argv?.jsonfile);
    if (!fs.existsSync(filePath)) {
      console.log(utils.$.red("[\u{1F4A2} override]"), utils.$.yellow(argv.jsonfile), `file does not exist.`);
      process.exit(0);
    }
  }
  const confJson = JSON.parse(fs.readFileSync(filePath, "utf8"));
  const name = argv.name;
  const version = argv.version;
  if (name) {
    confJson.package.productName = name;
  }
  if (version) {
    confJson.package.version = `${version}`;
  }
  if (argv.json) {
    Object.entries(argv.json).forEach(([key, val]) => {
      const key2 = key.replace(/_/g, ".");
      let val2 = val;
      switch (true) {
        case val === "true":
          val2 = true;
          break;
        case val === "false":
          val2 = false;
          break;
        case val === "null":
          val2 = null;
          break;
        case val === "null":
          val2 = null;
          break;
        case /\d+\.?\d+$/.test(val):
          if (key2 !== "package.version") {
            val2 = +val;
          } else {
            val2 = `${val}`;
          }
      }
      _.set(confJson, key2, val2);
    });
  }
  fs.writeFileSync(filePath, JSON.stringify(confJson, null, 2));
  console.log(utils.$.green("[\u2728 override]"), utils.$.yellow(utils.relativePath(filePath)));
}

module.exports = override;
