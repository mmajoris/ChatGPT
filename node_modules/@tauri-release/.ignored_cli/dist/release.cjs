'use strict';

const child_process = require('child_process');
const fs = require('fs');
const utils = require('./shared/cli.de4d4f3c.cjs');
const updatelog = require('./updatelog.cjs');
require('path');
require('module');

async function release() {
  const argv = utils.$argv();
  const tauriConfJson = utils.tauriConfJSON();
  const version = tauriConfJson?.package?.version || "0.0.0";
  let [a, b, c] = version.split(".")?.map(Number);
  if (argv.major) {
    a += 1;
    b = 0;
    c = 0;
  } else if (argv.minor) {
    b += 1;
    c = 0;
  } else {
    c += 1;
  }
  const nextVersion = `${a}.${b}.${c}`;
  const oldVersion = version;
  tauriConfJson.package.version = nextVersion;
  const nextTag = `v${nextVersion}`;
  const { filename } = updatelog(nextTag);
  fs.writeFileSync(utils.TAURI_CONF_PATH, JSON.stringify(tauriConfJson, null, 2));
  const verChange = `(${utils.$.yellow(oldVersion)} -> ${utils.$.green(nextVersion)})`;
  if (argv.git) {
    child_process.execSync(`git add ${utils.relativePath(utils.TAURI_CONF_PATH)} ${filename}`);
    child_process.execSync(`git commit -m "v${nextVersion}"`);
    child_process.execSync(`git tag -a v${nextVersion} -m "v${nextVersion}"`);
    child_process.execSync(`git push`);
    child_process.execSync(`git push origin v${nextVersion}`);
    console.log(utils.$.green("[\u2728 release]"), `Published successfully ${verChange}`);
  } else {
    console.log(utils.$.green("[\u2728 release]"), `tauri.conf.json version ${verChange}`);
  }
}

module.exports = release;
